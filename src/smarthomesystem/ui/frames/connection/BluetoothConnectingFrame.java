/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smarthomesystem.ui.frames.connection;

import annotations.Injectable;
import java.util.Timer;
import java.util.TimerTask;
import smarthomesystem.animation.AnimationListener;
import smarthomesystem.ui.ServiceableFrame;
import smarthomesystem.ui.services.connection.BluetoothConnectingFrameService;

/**
 *
 * @author Manel
 */
@Injectable
public class BluetoothConnectingFrame extends ServiceableFrame<BluetoothConnectingFrameService> {

    /**
     * Creates new form WirelessConnectingForm
     */
    public BluetoothConnectingFrame() {
        initComponents();
    }

    public void appendToLog(String text) {
        jTextArea1.append(text + "\n");
        jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
    }

    @Override
    public void setVisible(boolean isVisible) {
        if (isVisible) {
            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smarthomesystem/ui/resources/connecting-wireless_300x225.gif")));
        } else {
            appendToLog("- - - - - - - - - - - - - - - - ");
        }

        super.setVisible(isVisible);
    }

    public void showConnectedCheckmark(AnimationListener animationListener) {
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smarthomesystem/ui/resources/checkmark_225x225.gif")));
        new Timer().schedule(new TimerTask() {
            @Override
            public void run() {
                animationListener.onAnimationTimeout();
            }
        }, 1500);
    }

    public void showFailedConnectionCrossmark(AnimationListener animationListener) {
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smarthomesystem/ui/resources/crossmark_225x225.gif")));
        new Timer().schedule(new TimerTask() {
            @Override
            public void run() {
                animationListener.onAnimationTimeout();
            }
        }, 1500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smarthomesystem/ui/resources/connecting-wireless_300x225.gif"))); // NOI18N

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
